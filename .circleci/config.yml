# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      - image: circleci/golang:1.9

      - image: registry.access.redhat.com/rhscl/postgresql-96-rhel7:latest
        ports:
          - 5432:5432
        environment:
          POSTGRESQL_PASSWORD: postgres
          POSTGRESQL_USER: postgresql
          POSTGRESQL_DATABASE: aerogear_mobile_metrics
    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/aerogear/aerogear-app-metrics
    steps:
      - run: go get github.com/mattn/goveralls
      - run: go get -u github.com/golang/dep/cmd/dep
      - checkout
      - run: dep ensure
      - run: make test-integration-cover
      - run: /go/bin/goveralls -coverprofile=coverage-all.out -service=circle-ci -repotoken=$COVERALLS_TOKEN
  release:
    filters:
      # execute only on semver-style tags (vX.X.X)
      tags:
        only: /^v\d\.\d\.\d/
      branches:
        # needs to explicitly ignore all branches else gets run every time
        ignore: /.*/
    docker:
      - image: circleci/golang:1.9
    working_directory: /go/src/github.com/aerogear/aerogear-app-metrics
    steps:
      - run: go get github.com/goreleaser/goreleaser
      - checkout
      - run: make release
      - run: make docker_build_release
      - run: make docker_push_release
      - store_artifacts:
        path: dist
